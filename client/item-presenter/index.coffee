###*
# Module dependencies.
###

template = require('./template')
classes = require('classes')
reactive = require('reactive')

###*
# Expose `ItemPresenter`.
###

###*
# Initialize a new presenter for `item`.
#
# @param {Item} item
# @api public
###

ItemPresenter = (item) ->
  @item = item
  @view = reactive(template, item, delegate: this)
  @classes = classes(@view.el)
  @toggleCompleteClass()
  # update for initial template
  return

module.exports = ItemPresenter

###*
# Save completed state change
###

ItemPresenter::change = (e) ->
  complete = e.target.checked
  @item.complete complete
  @toggleCompleteClass()
  @item.save()
  return

ItemPresenter::toggleCompleteClass = ->
  if @item.complete()
    @classes.add 'complete'
  else
    @classes.remove 'complete'
  return

###*
# Remove the item.
###

ItemPresenter::remove = ->
  @view.destroy()
  @item.destroy()
  return

# ---
# generated by js2coffee 2.0.1